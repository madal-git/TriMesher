function [FM,CELL,M,NODE,N,FACE,O,N_I,N_I_N,N_H,N_L,dx,dy,X,Y,X1,X2,Y1,Y2]=PostTri_rec_main(ele,node,neigh,edge)

FM=1; % Flag for mesh generated by Triangle.
%% Improve the mesh quality by moving nodes
[node,ele,neigh]=PostTri_meshq_ndmv(ele,node,neigh);
%% Reorganize the data and creat variables M, N_I_B, N_I and N
[ele1,M,node1,N_I_N,N_I,N,neigh1]=PostTri_move_rec(ele,node,neigh);
%% Create node coordinates X and Y, X1, X2, Y1, Y2, N_H and N_L, dx and dy
[X,Y,X1,X2,Y1,Y2,N_H,N_L,dx,dy]=PostTri_xy_rec(node1,N_I,N);
%% Create cell data CELL for all triangular element
CELL=PostTri_cell_rec(ele1,node1,neigh1,M);
%% check node information in CELL
a=0;
ND=0; % Created to make sure each node is only counted once
Inner=0;
Int=0;
Outer=0;
for r=1:M;
    P=CELL{r};
    for s=1:3
        if a==0
            if P{10+(s-1)}==1
                Outer=Outer+1;
            elseif P{10+(s-1)}==-1
                Inner=Inner+1;
            elseif P{10+(s-1)}==0
                Int=Int+1;
            else
                error('Wrong boundary marker!');
            end
            a=a+1;
            ND(a)=P{7+(s-1)};
        else
            for i=1:a
                if P{7+(s-1)}==ND(i)
                    break;
                end
            end
            if i~=a
                ;
            else
                if P{7+(s-1)}==ND(i)
                    ;
                else
                    a=a+1;
                    ND(a)=P{7+(s-1)};
                    if P{10+(s-1)}==1
                        Outer=Outer+1;
                    elseif P{10+(s-1)}==-1
                        Inner=Inner+1;
                    elseif P{10+(s-1)}==0
                        Int=Int+1;
                    else
                        error('Wrong boundary marker!');
                    end
                end
            end
        end
    end
end
if (Inner~=N_I_N || (Inner+Int)~=N_I) || (Inner+Int+Outer)~=N
    error('error!');
end
%% check neighbor information in CELL
P=CELL{1};
e=ceil(10*sqrt(M*P{6})); %%%% Calculate the reference size
for r=1:M
    P=CELL{r};
    for s=1:3
        if P{2+s-1}==0 % No neighbor, on boundaries
            if s==1
                nm1=P{10};
                nm2=P{11};
            elseif s==2
                nm1=P{11};
                nm2=P{12};
            else
                nm1=P{12};
                nm2=P{10};
            end
            if (nm1==1 && nm2==1) || (nm1==-1 && nm2==-1)
                ;
            else
                error('The current face has no neighbor but not on the boundary!');
            end
        else
            Q=CELL{P{2+s-1}};
            a=0;
            if s==1
                nmc=P{28}; % face midpoint coordinate
            elseif s==2
                nmc=P{29}; % face midpoint coordinate
            else
                nmc=P{30}; % face midpoint coordinate
            end
            for k=1:3
                if k==1
                    Qnmc=Q{28}; % face midpoint coordinate
                elseif k==2
                    Qnmc=Q{29}; % face midpoint coordinate
                else
                    Qnmc=Q{30}; % face midpoint coordinate
                end
                if single(Qnmc(1,1)+e)==single(nmc(1,1)+e) && single(Qnmc(2,1)+e)==single(nmc(2,1)+e)
                    a=a+1;
                end
            end
            if a~=1
                error('The neighbor found on current face is not correct');
            end
        end
    end
end
%% Create NODE
NODE=PostTri_nddata(CELL,node1,N_I_N,N_I,N_H,N_L,X,Y,X1,X2,Y1,Y2,dx,dy);
%% Create FACE
[FACE,O]=PostTri_fcdata(CELL,NODE,edge,N_I_N,N_I,N_H,N_L,X,Y,X1,X2,Y1,Y2,dx,dy);
%% Combine data and final check
[CELL,NODE,FACE]=PostTri_datafill_check(CELL,NODE,FACE,N_I_N,N_I,N_H,N_L,X1,X2,Y1,Y2,X,Y);
%% plot mesh
figure;
% for s=1:N;
%     plot(X(s),Y(s),'Marker', 'o','Markersize',2, 'MarkerFaceColor', 'black','MarkerEdgeColor', 'black');
%     hold on;
% end;
% axis equal tight;
for r=1:M
    P=CELL{r};
    plot(P{22},P{23},'black', 'linewidth',1);
    hold on;
    plot(P{24},P{25},'black', 'linewidth',1);
    hold on;
    plot(P{26},P{27},'black', 'linewidth',1);
    hold on;
end
axis equal tight;
%% save data
save('GTmesh.mat','FM','CELL','M','NODE','N','FACE','O','N_I','N_I_N','N_H','N_L','dx','dy','X','Y','X1','X2','Y1','Y2');
msg='Please rename the file of generated data! Otherwise it will be overwritten when the mesher is executed again!';
disp(msg);